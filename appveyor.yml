version: 1.4.{build}
branches:
  except:
  - gh-pages
configuration: Release
platform: Any CPU
clone_folder: C:\projects\dotnet-standard-sdk
environment:
  COVERALLS_REPO_TOKEN:
    secure: Dnsrk2n+VNE4swcbTLXpfnHwUwTWT8TqMiMkthU6mq/ohNq9dA2rrSA6kdLDBKME
  GH_TOKEN:
    secure: J0LjUlYl+lGJMLBcOgVF1m1I07nyr+8yFOMaNBA23RGLMJKvYnRlhmGWXp07ejgu
  CRED_SECRET:
    secure: eEcA/09B7XzeTSb3GlaeqcWfQ/TemXxAq9/0AFM5+z8=
  VCAP_URL:
    secure: z68QwNPZhdBxLtcf9lx5CrAIJe2AstVlaygEV2vBjfNWpSDTssdX+U5edJZjhk2mZ1u71BOlKd/aOL0yuVn3Ew==
  VCAP_USERNAME:
    secure: xRHH3z2B+DfQKsmd9CWOhA==
  VCAP_PASSWORD:
    secure: 3YoxDjzz7qMIbDqokgsB1A==
install:
- cmd: >-
    rm -rf packages

    mkdir packages

    nuget restore

    nuget install -Verbosity quiet -OutputDirectory packages -Version 4.6.519 OpenCover

    nuget install -Verbosity quiet -OutputDirectory packages -Version 2.4.5.0 ReportGenerator

    nuget install -Verbosity quiet -OutputDirectory packages -Version 0.7.0 coveralls.net

    nuget install -Verbosity quiet -OutputDirectory packages -Version 1.8.13 Doxygen

    nuget install -Verbosity quiet -OutputDirectory packages secure-file -ExcludeVersion

before_build:
- ps: dotnet restore
build:
  project: IBM.WatsonDeveloperCloud.sln
  verbosity: minimal
after_build:
- ps: >-
    if(!$env:APPVEYOR_REPO_TAG_NAME)

    {
        $branchName = $env:APPVEYOR_REPO_BRANCH
    }

    else

    {
        $branchName = $env:APPVEYOR_REPO_TAG_NAME
    }


    Write-Output "branchName  is " + $branchName


    .\packages\Doxygen.1.8.13\tools\doxygen.exe Doxyfile


    If($branchName -eq "development" -or $branchName -eq $env:APPVEYOR_REPO_TAG_NAME -or $branchName -eq "master")

    {
        git config --global user.email "wps@us.ibm.com"
        git config --global user.name "Watson Github Bot"
        git clone --quiet --branch=gh-pages https://$env:GH_TOKEN@github.com/watson-developer-cloud/dotnet-standard-sdk.git gh-pages

        If(Test-Path -Path gh-pages\docs\$branchName)
        {
          rm gh-pages\docs\$branchName -r -force
        }
        mkdir -p gh-pages\docs\$branchName
        mv .\docs\html gh-pages\docs\$branchName
        . .\.utility\generate_html.ps1
        New-TableOfContents ".\gh-pages\docs" | Out-File ".\gh-pages\index.html" -encoding utf8
        cd gh-pages
        git add -f .
        git commit -m "Updated documentation for $branchName"
        git push -f origin gh-pages
        cd ../
    }

    else

    {
        Write-Output "branchName is $branchName. Not generating documentation."
    }


    Copy-Item C:\projects\dotnet-standard-sdk\test\IBM.WatsonDeveloperCloud.VisualRecognition.v3.IntegrationTests\VisualRecognitionTestData C:\projects\dotnet-standard-sdk\VisualRecognitionTestData

    Copy-Item C:\projects\dotnet-standard-sdk\test\IBM.WatsonDeveloperCloud.SpeechToText.v1.IntegrationTests\SpeechToTextTestData C:\projects\dotnet-standard-sdk\SpeechToTextTestData

    Copy-Item C:\projects\dotnet-standard-sdk\test\IBM.WatsonDeveloperCloud.Discovery.v1.IntegrationTests\DiscoveryTestData C:\projects\dotnet-standard-sdk\DiscoveryTestData

    Copy-Item C:\projects\dotnet-standard-sdk\test\IBM.WatsonDeveloperCloud.LanguageTranslator.v2.IntegrationTests\glossary.tmx C:\projects\dotnet-standard-sdk\glossary.tmx
test_script:
- ps: "if((Test-Path -Path coverage))\n{\n  rm coverage -r -force\n}\nNew-Item -path . -name coverage -itemtype directory\nForEach ($folder in (Get-ChildItem -Path C:\\projects\\dotnet-standard-sdk\\test -Directory)) { \n  if($env:APPVEYOR_PULL_REQUEST_NUMBER -eq $null)\n    {\n      Write-Output \"No pull request number. Executing tests\"\n      dotnet test $folder.FullName\n      if($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode )  }\n      echo \"Test passed: $?\"\n      echo \"LastExitCode: $LastExitCode\"\n      $openCover = 'C:\\projects\\dotnet-standard-sdk\\packages\\OpenCover.4.6.519\\tools\\OpenCover.Console.exe'    \n      $targetArgs = '-targetargs: test ' + $folder.FullName + ' -c Release -f netcoreapp1.0'\n      $filter = '-filter:+[IBM.WatsonDeveloperCloud*]*-[*Tests*]*-[*Example*]*'\n      & $openCover '-target:C:\\Program Files\\dotnet\\dotnet.exe' $targetArgs '-register:user' $filter '-oldStyle' '-mergeoutput' '-hideskipped:File' '-searchdirs:$testdir\\bin\\release\\netcoreapp1.0' '-output:coverage\\coverage.xml'\n    }\n    else\n    {\n        Write-Output \"Pull request number is $env:APPVEYOR_PULL_REQUEST_NUMBER. Skipping tests.\"\n    }\n }\n\nC:\\projects\\dotnet-standard-sdk\\packages\\ReportGenerator.2.4.5.0\\tools\\ReportGenerator.exe -reports:coverage\\coverage.xml -targetdir:coverage -verbosity:Error\n\nif($env:COVERALLS_REPO_TOKEN)\n{\n  C:\\projects\\dotnet-standard-sdk\\packages\\coveralls.net.0.7.0\\tools\\csmacnz.Coveralls.exe --opencover -i coverage\\coverage.xml --useRelativePaths\n}\nelse\n{\n  Write-Output \"There is no Coveralls Repo Token - not pushing coverage.\"\n}"
artifacts:
- path: '\src\IBM.WatsonDeveloperCloud\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud
- path: '\src\IBM.WatsonDeveloperCloud.Conversation.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.Conversation.v1
- path: '\src\IBM.WatsonDeveloperCloud.LanguageTranslator.v2\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.LanguageTranslator.v2
- path: '\src\IBM.WatsonDeveloperCloud.PersonalityInsights.v3\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.PersonalityInsights.v3
- path: '\src\IBM.WatsonDeveloperCloud.SpeechToText.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.SpeechToText.v1
- path: '\src\IBM.WatsonDeveloperCloud.TextToSpeech.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.TextToSpeech.v1
- path: '\src\IBM.WatsonDeveloperCloud.ToneAnalyzer.v3\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.ToneAnalyzer.v3
- path: '\src\IBM.WatsonDeveloperCloud.VisualRecognition.v3\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.VisualRecognition.v3
- path: '\src\IBM.WatsonDeveloperCloud.Discovery.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.Discovery.v1
- path: '\src\IBM.WatsonDeveloperCloud.NaturalLanguageUnderstanding.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.NaturalLanguageUnderstanding.v1
deploy:
- provider: NuGet
  api_key:
    secure: 2W1iN8vudnfbSezg9ZE4bfBBacbBHjhVuseZqsKsd2nCIydYaLRnW3kordCyeI/O
  on:
    branch: master
    APPVEYOR_REPO_TAG: true
